name: Dynamic Multi-App Heroku Deploy

on:
  push:
    branches:
      - main # Or 'master'
    paths:
      - 'express/**' # Trigger if anything in the 'express' folder changes
      - '.github/workflows/dynamic-deploy.yml' # Trigger if this workflow changes

jobs:
  deploy_apps:
    runs-on: ubuntu-latest
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      BASE_APPS_DIR: 'express' # Base directory where all your apps reside
      # Define a prefix for your app name secrets
      HEROKU_APP_SECRET_PREFIX: 'HEROKU_APP_NAME_' # <--- NEW: Naming standard prefix

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Find and Deploy Apps
        id: deployer
        run: |
          set -e # Exit immediately if a command exits with a non-zero status

          APP_DIRS=$(find "$BASE_APPS_DIR" -type f -name "package.json" -exec dirname {} \;)

          if [ -z "$APP_DIRS" ]; then
            echo "No applications found with package.json in '$BASE_APPS_DIR'. Skipping deployment."
            exit 0 # Exit successfully if no apps are found
          fi

          echo "Found applications in directories:"
          echo "$APP_DIRS"

          for APP_DIR in $APP_DIRS; do
            echo "--- Processing app in: $APP_DIR ---"

            APP_FOLDER_NAME=$(basename "$APP_DIR") # e.g., 'to_do_list'

            # Construct the secret name based on the standard: HEROKU_APP_NAME_SUBDIRECTORY
            SECRET_KEY_NAME="${HEROKU_APP_SECRET_PREFIX}$(echo ${APP_FOLDER_NAME} | tr '[:lower:]-' '[:upper:]_')"
            
            # Access the secret value using indirect expansion
            HEROKU_APP_NAME_VALUE="${!SECRET_KEY_NAME}" 

            if [ -z "$HEROKU_APP_NAME_VALUE" ]; then
              echo "::error::Heroku app name secret '${SECRET_KEY_NAME}' not found for app '${APP_FOLDER_NAME}'. Please create this secret in GitHub."
              exit 1 # Fail the workflow if a secret is missing
            fi

            # Read app name from package.json for consistency check
            PACKAGE_JSON_APP_NAME=$(jq -r '.name' "$APP_DIR/package.json")

            if [ "$APP_FOLDER_NAME" != "$PACKAGE_JSON_APP_NAME" ]; then
              echo "::warning::Inconsistency detected for app '${APP_FOLDER_NAME}':"
              echo "::warning::Folder name ('${APP_FOLDER_NAME}') does NOT match 'name' in package.json ('${PACKAGE_JSON_APP_NAME}')."
              echo "::warning::Using folder name to construct Heroku secret, ensure your Heroku app name matches folder name for this workflow."
              # Optionally, you could exit 1 here if you want to enforce strict consistency
            fi
            
            echo "Installing dependencies for ${APP_FOLDER_NAME}..."
            npm install --prefix "$APP_DIR"

            echo "Attempting to deploy ${APP_FOLDER_NAME} to Heroku app: ${HEROKU_APP_NAME_VALUE}"
            
            # Run the deployment action
            /usr/bin/docker run --rm \
              -e HEROKU_API_KEY="$HEROKU_API_KEY" \
              -e HEROKU_APP_NAME="$HEROKU_APP_NAME_VALUE" \
              -e HEROKU_EMAIL="$HEROKU_EMAIL" \
              -e APPDIR="$APP_DIR" \
              akhileshns/heroku-deploy:v3.13.15 # Specify the image and tag
          
            echo "--- Finished processing app in: $APP_DIR ---"
          done
        shell: bash # Ensure bash is used for advanced shell scripting
