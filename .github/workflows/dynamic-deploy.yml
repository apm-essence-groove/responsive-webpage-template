name: Dynamic Multi-App Heroku Deploy

on:
  push:
    branches:
      - main # Or 'master'
    # Trigger if anything within 'homepage-app' (including its subfolders like to_do_list) changes,
    # or if the workflow file itself changes.
    paths:
      - 'homepage-app/**'
      - '.github/workflows/dynamic-deploy.yml'

jobs:
  deploy_apps:
    runs-on: ubuntu-latest
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
      APP_BASE_DIRS: "homepage-app" # <-- Only scan this top-level directory
      # No HEROKU_APP_SECRET_PREFIX is needed as we're reading from package.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Install jq (for package.json parsing)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Find and Deploy Apps
        id: deployer
        run: |
          set -e # Exit immediately if a critical command fails

          ALL_APP_DIRS=""
          for BASE_DIR in $APP_BASE_DIRS; do
            echo "Scanning for apps in: $BASE_DIR"
            # Finds package.json files within BASE_DIR and any of its subdirectories
            # This will find homepage-app/package.json and homepage-app/to_do_list/package.json
            FOUND_DIRS=$(find "$BASE_DIR" -type f -name "package.json" -exec dirname {} \;)
            ALL_APP_DIRS="$ALL_APP_DIRS $FOUND_DIRS"
          done

          # Remove duplicates and trim whitespace
          ALL_APP_DIRS=$(echo "$ALL_APP_DIRS" | tr ' ' '\n' | sort -u | tr '\n' ' ')

          if [ -z "$ALL_APP_DIRS" ]; then
            echo "No applications found with package.json in '$APP_BASE_DIRS'. Skipping deployment."
            exit 0 # Exit successfully if no apps are found
          fi

          echo "Found applications in directories:"
          for d in $ALL_APP_DIRS; do echo "- $d"; done

          DEPLOYMENT_SUCCESS=true # To track if any app deployment failed

          for APP_DIR in $ALL_APP_DIRS; do
            echo "--- Processing app in: $APP_DIR ---"

            # Determine the app's effective name for consistency check
            # This is the name used in package.json and for internal logic.
            APP_FOLDER_NAME=$(basename "$APP_DIR") # e.g., 'homepage-app' or 'to_do_list'

            # Read the 'name' and 'herokuAppName' from package.json
            PACKAGE_JSON_APP_NAME=$(jq -r '.name' "$APP_DIR/package.json" || echo "")
            HEROKU_APP_TARGET_NAME=$(jq -r '.herokuAppName' "$APP_DIR/package.json" || echo "")

            # --- Consistency Check: Folder Name vs. package.json 'name' ---
            # This is critical for internal consistency of your monorepo.
            if [ "$APP_FOLDER_NAME" != "$PACKAGE_JSON_APP_NAME" ]; then
              echo "::error::Inconsistency detected for app '${APP_FOLDER_NAME}' (path: '${APP_DIR}'):"
              echo "::error::Folder name ('${APP_FOLDER_NAME}') does NOT match 'name' in package.json ('${PACKAGE_JSON_APP_NAME}')."
              echo "::error::Please **rename either the folder or the 'name' in package.json to match**, then commit and re-run. This app will be skipped."
              DEPLOYMENT_SUCCESS=false
              continue # Skip to the next app
            fi

            # --- Heroku App Name Check ---
            if [ -z "$HEROKU_APP_TARGET_NAME" ] || [ "$HEROKU_APP_TARGET_NAME" == "null" ]; then
              echo "::error::'herokuAppName' field not found or is empty in '$APP_DIR/package.json'."
              echo "::error::Please add '\"herokuAppName\": \"YOUR_HEROKU_APP_NAME\"' to this package.json file."
              DEPLOYMENT_SUCCESS=false
              continue
            fi
            
            echo "Installing dependencies for ${APP_FOLDER_NAME} (path: '${APP_DIR}')..."
            npm install --prefix "$APP_DIR" || {
                echo "::error::npm install failed for app in '${APP_DIR}'. Skipping deployment for this app."
                DEPLOYMENT_SUCCESS=false
                continue
            }

            echo "Attempting to deploy ${APP_FOLDER_NAME} to Heroku app: ${HEROKU_APP_TARGET_NAME}"
            
            # Execute the deployment action
            /usr/bin/docker run --rm \
              -e HEROKU_API_KEY="$HEROKU_API_KEY" \
              -e HEROKU_EMAIL="$HEROKU_EMAIL" \
              -e HEROKU_APP_NAME="$HEROKU_APP_TARGET_NAME" \
              -e APPDIR="$APP_DIR" \
              akhileshns/heroku-deploy:v3.13.15 || { # Using v3.13.15, revert to v3.13.10 if Docker pull fails
                echo "::error::Deployment of ${APP_FOLDER_NAME} (path: '${APP_DIR}') to Heroku app ${HEROKU_APP_TARGET_NAME} FAILED."
                DEPLOYMENT_SUCCESS=false
              }
          
            echo "--- Finished processing app in: $APP_DIR ---"
          done

          if [ "$DEPLOYMENT_SUCCESS" = false ]; then
            echo "::error::One or more application deployments failed due to errors or inconsistencies. Please review the logs above."
            exit 1
          fi

        shell: bash
