name: Dynamic Multi-App Discovery

on:
  # FIX: Add workflow_dispatch for manual triggering
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on (e.g., main, new-apps)'
        required: true
        default: 'main' # Default to your main branch




jobs:
  find_apps: # Job 1: Finds all deployable app directories and their details (no needs)
    runs-on: ubuntu-latest
    outputs:
      app_details_json: ${{ steps.scan.outputs.app_details_json }}
    env:
      APP_BASE_DIRS: "homepage-app" # The top-level folder where your apps are

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # For workflow_dispatch, checkout the specified branch
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Install jq (for package.json parsing and JSON output)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Scan for Apps and Collect Details
        id: scan
        run: |
          set -e

          APP_DETAILS_ARRAY=() # Array to store JSON objects for each app
          echo "Scanning for apps in: $APP_BASE_DIRS"
          for BASE_DIR in $APP_BASE_DIRS; do
            FOUND_DIRS=$(find "$BASE_DIR" -type f -name "package.json" -exec dirname {} \;)
            for APP_DIR in $FOUND_DIRS; do
              PACKAGE_JSON_PATH="$APP_DIR/package.json"

              if [ ! -f "$PACKAGE_JSON_PATH" ]; then
                echo "::warning::package.json not found for ${APP_DIR}. Skipping."
                continue
              fi

              # Read details from package.json
              APP_NAME=$(jq -r '.name' "$PACKAGE_JSON_PATH" || echo "")
              HEROKU_APP_NAME=$(jq -r '.herokuAppName' "$PACKAGE_JSON_PATH" || echo "")
              DEPLOYED_URL=$(jq -r '.deployedUrl' "$PACKAGE_JSON_PATH" || echo "")

              # Basic validation for essential fields
              if [ -z "$APP_NAME" ] || [ "$APP_NAME" == "null" ]; then
                  echo "::warning::'name' field missing or empty in ${PACKAGE_JSON_PATH}. Skipping app."
                  continue
              fi
              if [ -z "$HEROKU_APP_NAME" ] || [ "$HEROKU_APP_NAME" == "null" ]; then
                  echo "::warning::'herokuAppName' field missing or empty in ${PACKAGE_JSON_PATH}. Skipping app."
                  continue
              fi
              if [ -z "$DEPLOYED_URL" ] || [ "$DEPLOYED_URL" == "null" ]; then
                  echo "::warning::'deployedUrl' field missing or empty in ${PACKAGE_JSON_PATH}. Skipping app."
                  continue
              fi

              # Consistency Check: Folder Name vs. package.json 'name'
              APP_FOLDER_NAME=$(basename "$APP_DIR")
              if [ "$APP_FOLDER_NAME" != "$APP_NAME" ]; then
                  echo "::warning::Inconsistency: Folder name ('${APP_FOLDER_NAME}') does NOT match 'name' in package.json ('${APP_NAME}'). Using folder name as primary identifier for consistency."
              fi

              # Construct JSON object for this app with all details
              APP_JSON_OBJ="{\"app_dir\":\"$APP_DIR\", \"name\":\"$APP_NAME\", \"herokuAppName\":\"$HEROKU_APP_NAME\", \"url\":\"$DEPLOYED_URL\"}"
              APP_DETAILS_ARRAY+=("$APP_JSON_OBJ")
            done
          done

          if [ ${#APP_DETAILS_ARRAY[@]} -eq 0 ]; then
            echo "No valid applications found. Exiting."
            printf "app_details_json=[]\n" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Convert array of JSON objects into a single JSON array string
          APP_DETAILS_JSON=$(printf "%s\n" "${APP_DETAILS_ARRAY[@]}" | jq -s -c .)
          echo "Generated App Details JSON: $APP_DETAILS_JSON"

          printf "app_details_json=%s\n" "$APP_DETAILS_JSON" >> "$GITHUB_OUTPUT"
        shell: bash

